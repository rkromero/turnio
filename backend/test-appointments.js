// Script para diagnosticar problemas con citas/turnos
const axios = require('axios');

const API_BASE = 'https://turnio-backend-production.up.railway.app/api';

async function testAppointments() {
  console.log('üîç DIAGN√ìSTICO DE CITAS/TURNOS\n');
  
  try {
    // 1. Verificar salud del servidor
    console.log('1Ô∏è‚É£ Verificando salud del servidor...');
    const health = await axios.get(`${API_BASE.replace('/api', '')}/health`);
    console.log('   ‚úÖ Servidor OK:', health.data.message);
    
    // 2. Intentar obtener citas sin autenticaci√≥n (para ver el error)
    console.log('\n2Ô∏è‚É£ Probando endpoint de citas...');
    try {
      const appointments = await axios.get(`${API_BASE}/appointments`);
      console.log('   ‚úÖ Citas obtenidas:', appointments.data);
    } catch (error) {
      console.log('   ‚ö†Ô∏è Error esperado (requiere auth):', error.response?.status, error.response?.data?.message);
    }
    
    // 3. Verificar cliente espec√≠fico
    console.log('\n3Ô∏è‚É£ Verificando cliente scoring@asd.com...');
    const clientScore = await axios.get(`${API_BASE}/client-scoring/score?email=scoring@asd.com`);
    console.log('   Cliente encontrado:', clientScore.data);
    
    // 4. Verificar endpoints de dashboard
    console.log('\n4Ô∏è‚É£ Probando dashboard stats...');
    try {
      const dashboardStats = await axios.get(`${API_BASE}/dashboard/stats`);
      console.log('   ‚úÖ Dashboard stats:', dashboardStats.data);
    } catch (error) {
      console.log('   ‚ö†Ô∏è Error dashboard (requiere auth):', error.response?.status, error.response?.data?.message);
    }
    
    console.log('\nüìã DIAGN√ìSTICO COMPLETADO');
    console.log('\nüéØ POSIBLES SOLUCIONES:');
    console.log('   1. Recarga la p√°gina de Turnos (Ctrl+F5)');
    console.log('   2. Revisa si hay filtros activos en la p√°gina');
    console.log('   3. Verifica que est√©s logueado correctamente');
    console.log('   4. Comprueba la fecha de la cita creada');
    console.log('   5. Aseg√∫rate de estar en el negocio correcto');
    
    console.log('\nüí° INFORMACI√ìN √öTIL:');
    console.log('   ‚Ä¢ El cliente scoring@asd.com est√° registrado');
    console.log('   ‚Ä¢ El sistema de scoring est√° funcionando');
    console.log('   ‚Ä¢ Los endpoints del servidor est√°n operativos');
    
  } catch (error) {
    console.error('‚ùå Error en diagn√≥stico:', error.message);
  }
}

testAppointments(); 