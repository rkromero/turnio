// Script para debuggear la l√≥gica de actualizaci√≥n de nombres
const axios = require('axios');

async function debugUpdateLogic() {
  console.log('üîç DEBUGGEANDO L√ìGICA DE ACTUALIZACI√ìN\n');
  
  // Crear un endpoint de debug en el servidor para ver qu√© est√° pasando
  const debugEndpoint = 'https://turnio-backend-production.up.railway.app/debug/client-update-process';
  
  try {
    console.log('1Ô∏è‚É£ Verificando cliente existente ricardo@gmail.com...');
    
    // Primero ver el estado actual
    const currentState = await axios.get(`https://turnio-backend-production.up.railway.app/api/client-scoring/score?email=ricardo@gmail.com`);
    console.log('Estado actual:', currentState.data);
    
    // Simular exactamente lo que est√° pasando en el servidor
    console.log('\n2Ô∏è‚É£ Simulando l√≥gica de comparaci√≥n...');
    
    const clientName = 'ALFREDO-NUEVO';
    const existingName = 'ricardo'; // Lo que est√° en la BD
    
    console.log(`clientName: "${clientName}"`);
    console.log(`existingName: "${existingName}"`);
    console.log(`clientName.trim(): "${clientName.trim()}"`);
    console.log(`Comparaci√≥n: "${clientName.trim()}" !== "${existingName}" = ${clientName.trim() !== existingName}`);
    
    if (clientName && clientName.trim() !== existingName) {
      console.log('‚úÖ La condici√≥n DEBER√çA ser verdadera - debe actualizar');
    } else {
      console.log('‚ùå La condici√≥n es falsa - NO actualizar√°');
    }
    
    // Ahora probar con datos reales
    console.log('\n3Ô∏è‚É£ Probando actualizaci√≥n real...');
    
    const testData = {
      clientName: 'ALFREDO-ACTUALIZADO',
      clientEmail: 'ricardo@gmail.com',
      clientPhone: '+54 9 11 1234-5678',
      serviceId: 'cmbnphqvp0001qh0i2tn1anxw',
      startTime: '2025-06-17T14:00:00.000Z',
      notes: 'Test actualizaci√≥n',
      professionalId: null
    };
    
    console.log('Enviando:', JSON.stringify(testData, null, 2));
    
    const response = await axios.post(
      'https://turnio-backend-production.up.railway.app/api/public/cdfa/book',
      testData
    );
    
    console.log('\nüìã Respuesta:');
    console.log(JSON.stringify(response.data, null, 2));
    
    const returnedName = response.data.data?.clientName;
    console.log(`\nüéØ RESULTADO:`);
    console.log(`   Enviado: "ALFREDO-ACTUALIZADO"`);
    console.log(`   Devuelto: "${returnedName}"`);
    
    if (returnedName === 'ALFREDO-ACTUALIZADO') {
      console.log('‚úÖ ¬°FUNCIONA! El nombre se actualiz√≥ correctamente');
    } else {
      console.log('‚ùå NO FUNCIONA - El nombre NO se actualiz√≥');
      console.log('   Esto confirma que hay un bug en la l√≥gica de actualizaci√≥n');
    }
    
  } catch (error) {
    console.error('‚ùå Error:', error.response?.data || error.message);
  }
}

debugUpdateLogic(); 